/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export const __wbg_pageinfo_free: (a: number, b: number) => void;
export const pageinfo_copy: (a: number) => number;
export const pageinfo_new: (a: any) => [number, number, number];
export const pageinfo_page: (a: number) => [number, number];
export const pageinfo_category: (a: number) => [number, number];
export const pageinfo_site: (a: number) => [number, number];
export const pageinfo_title: (a: number) => [number, number];
export const pageinfo_alt_title: (a: number) => [number, number];
export const pageinfo_score: (a: number) => number;
export const pageinfo_tags: (a: number) => [number, number, number];
export const pageinfo_language: (a: number) => [number, number];
export const __wbg_parseoutcome_free: (a: number, b: number) => void;
export const parseoutcome_copy: (a: number) => number;
export const parseoutcome_syntax_tree: (a: number) => number;
export const parseoutcome_errors: (a: number) => [number, number, number];
export const __wbg_syntaxtree_free: (a: number, b: number) => void;
export const syntaxtree_copy: (a: number) => number;
export const syntaxtree_data: (a: number) => [number, number, number];
export const parse: (a: number, b: number, c: number) => [number, number, number];
export const __wbg_htmloutput_free: (a: number, b: number) => void;
export const htmloutput_copy: (a: number) => number;
export const htmloutput_body: (a: number) => [number, number];
export const htmloutput_html_meta: (a: number) => [number, number, number];
export const htmloutput_backlinks: (a: number) => [number, number, number];
export const render_html: (a: number, b: number, c: number) => number;
export const render_text: (a: number, b: number, c: number) => [number, number];
export const __wbg_tokenization_free: (a: number, b: number) => void;
export const tokenization_copy: (a: number) => number;
export const tokenization_text: (a: number) => [number, number];
export const tokenization_tokens: (a: number) => [number, number, number];
export const tokenize: (a: number, b: number) => number;
export const __wbg_utf16indexmap_free: (a: number, b: number) => void;
export const utf16indexmap_new: (a: number, b: number) => number;
export const utf16indexmap_copy: (a: number) => number;
export const utf16indexmap_get_index: (a: number, b: number) => [number, number, number];
export const __wbg_wikitextsettings_free: (a: number, b: number) => void;
export const wikitextsettings_copy: (a: number) => number;
export const wikitextsettings_new: (a: any) => [number, number, number];
export const wikitextsettings_from_mode: (a: number, b: number, c: number, d: number) => [number, number, number];
export const version: () => [number, number];
export const preprocess: (a: number, b: number) => [number, number];
export const __wbindgen_malloc: (a: number, b: number) => number;
export const __wbindgen_realloc: (a: number, b: number, c: number, d: number) => number;
export const __wbindgen_exn_store: (a: number) => void;
export const __externref_table_alloc: () => number;
export const __wbindgen_export_4: WebAssembly.Table;
export const __externref_table_dealloc: (a: number) => void;
export const __wbindgen_free: (a: number, b: number, c: number) => void;
export const __wbindgen_start: () => void;
