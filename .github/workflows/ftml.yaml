name: '[ftml] Rust'

on:
  push:
    paths:
      - 'ftml/Cargo.toml'
      - 'ftml/Cargo.lock'
      - 'ftml/src/**'
      - 'ftml/test/*'
      - '.github/workflows/ftml.yaml'

jobs:
  library_build_and_test:
    name: Library
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: -D warnings
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Cargo Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ftml/target
          key: ${{ runner.os }}-ftml-default-${{ hashFiles('ftml/**/Cargo.toml') }}

      - name: Build (All Features)
        run: cargo build --all-features
        working-directory: ftml

      - name: Build (No Features)
        run: cargo build --no-default-features
        working-directory: ftml

      - name: Test
        run: cargo test --all-features -- --nocapture --test-threads 1
        working-directory: ftml

  wasm:
    name: WebASM
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: -D warnings
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: WASM Toolchain
        uses: jetli/wasm-pack-action@v0.3.0
        with:
          version: 'latest'

      - name: Cargo Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ftml/target
          key: ${{ runner.os }}-ftml-webasm-${{ hashFiles('ftml/**/Cargo.toml') }}

      - name: Build (Default)
        run: wasm-pack build --dev
        working-directory: ftml

      - name: Build (Console Logging)
        run: wasm-pack build --dev -- --features wasm-log
        working-directory: ftml

      - name: Build (No Features)
        run: wasm-pack build --dev -- --no-default-features
        working-directory: ftml

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: -D warnings

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Cargo Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ftml/target
          key: ${{ runner.os }}-ftml-coverage-${{ hashFiles('ftml/**/Cargo.toml') }}

      - name: Generate Coverage
        uses: actions-rs/tarpaulin@v0.1
        working-directory: ftml

      - name: Export Coverage
        uses: codecov/codecov-action@v1
        with:
          directory: ftml/target/coverage
          flags: ftml

  clippy_lint:
    name: Lint
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: -D warnings
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: rustfmt, clippy

      - name: Cargo Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ftml/target
          key: ${{ runner.os }}-ftml-lint-${{ hashFiles('ftml/**/Cargo.toml') }}

      - name: Rustfmt
        run: cargo fmt --all -- --check
        working-directory: ftml

      - name: Clippy
        run: cargo clippy
        working-directory: ftml
