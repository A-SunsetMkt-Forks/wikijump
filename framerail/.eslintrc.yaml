root: true

ignorePatterns:
  - "**/node_modules/**"
  - "./build/**"
  - "./svelte-kit/**"
  - "./package/**"

plugins:
  - "@typescript-eslint"
  - tsdoc

extends:
  - plugin:svelte/base

parser: "@typescript-eslint/parser"
parserOptions:
  sourceType: module
  ecmaVersion: 2020
  project: "./tsconfig.json"
  extraFileExtensions: [".svelte"]

env:
  browser: true
  es2017: true
  node: true

rules:
  eqeqeq: error
  yoda: error
  prefer-rest-params: error
  prefer-spread: error
  symbol-description: error
  template-curly-spacing: error
  prefer-numeric-literals: error
  prefer-template: error
  no-useless-rename: error
  no-useless-computed-key: error
  no-useless-concat: error
  no-undef-init: error
  no-throw-literal: error
  default-case-last: error
  wrap-iife: error
  prefer-arrow-callback: [error, allowNamedFunctions: true]
  no-alert: error
  no-caller: error
  no-eval: error
  no-implied-eval: error
  no-var: error
  no-script-url: error
  new-parens: warn
  no-lonely-if: warn
  no-unneeded-ternary: warn
  operator-assignment: warn
  prefer-exponentiation-operator: warn
  curly: [warn, multi-line]

  tsdoc/syntax: error

  "@typescript-eslint/space-infix-ops": [warn, int32Hint: true]
  "@typescript-eslint/ban-types": error
  "@typescript-eslint/no-misused-new": error
  "@typescript-eslint/no-non-null-asserted-optional-chain": error
  "@typescript-eslint/no-require-imports": error
  "@typescript-eslint/no-this-alias": error
  "@typescript-eslint/no-extra-non-null-assertion": error
  "@typescript-eslint/no-unnecessary-type-constraint": error
  "@typescript-eslint/no-for-in-array": error
  "@typescript-eslint/prefer-as-const": error
  "@typescript-eslint/prefer-namespace-keyword": error
  "@typescript-eslint/prefer-optional-chain": error
  "@typescript-eslint/prefer-regexp-exec": error
  "@typescript-eslint/no-useless-constructor": error
  "@typescript-eslint/unbound-method": error
  "@typescript-eslint/triple-slash-reference": [error, types: prefer-import]
  "@typescript-eslint/adjacent-overload-signatures": warn
  "@typescript-eslint/array-type": warn
  "@typescript-eslint/no-inferrable-types": warn
  "@typescript-eslint/consistent-indexed-object-style": warn
  "@typescript-eslint/no-confusing-non-null-assertion": warn
  "@typescript-eslint/class-literal-property-style": [warn, fields]
  "@typescript-eslint/consistent-type-exports":
    [warn, { fixMixedExportsWithInlineTypeSpecifier: true }]

  svelte/no-dupe-else-if-blocks: error
  svelte/no-dupe-style-properties: error
  svelte/no-dynamic-slot-name: error
  svelte/no-not-function-handler: error
  svelte/no-object-in-text-mustaches: error
  svelte/no-shorthand-style-property-overrides: error
  svelte/no-store-async: error
  svelte/valid-compile: error
  svelte/valid-prop-names-in-kit-pages: error
  svelte/no-target-blank: error

  svelte/require-store-callbacks-use-set-param: warn
  svelte/button-has-type: warn
  svelte/no-at-debug-tags: warn
  svelte/no-reactive-functions: warn
  svelte/no-reactive-literals: warn
  svelte/no-unused-svelte-ignore: warn
  svelte/no-useless-mustaches: warn
  svelte/derived-has-same-inputs-outputs: warn
  svelte/html-self-closing: warn
  svelte/no-extra-reactive-curlies: warn
  svelte/prefer-class-directive: warn
  svelte/prefer-style-directive: warn
  svelte/shorthand-attribute: warn
  svelte/shorthand-directive: warn
  svelte/sort-attributes: warn
  svelte/spaced-html-comment: warn

overrides:
  # JavaScript (Node)
  - files: ["*.js", "*.cjs"]
    parserOptions: { createDefaultProgram: true }
    rules:
      "@typescript-eslint/no-require-imports": "off"
      tsdoc/syntax: "off"

  # Svelte (Browser)
  - files: ["*.svelte"]
    parser: "svelte-eslint-parser"
    parserOptions: { parser: "@typescript-eslint/parser" }
