//! SeaORM Entity. Generated by sea-orm-codegen 0.4.1

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "ip_block")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub block_id: i64,
    pub site_id: Option<i32>,
    #[sea_orm(column_type = "Custom(\"inet\".to_owned())", nullable)]
    pub ip: Option<String>,
    pub flag_proxy: bool,
    pub reason: Option<String>,
    pub date_blocked: Option<DateTime>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::site::Entity",
        from = "Column::SiteId",
        to = "super::site::Column::SiteId",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    Site,
}

impl Related<super::site::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Site.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
