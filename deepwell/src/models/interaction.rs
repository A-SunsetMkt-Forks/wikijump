//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.3

use super::sea_orm_active_enums::InteractionObjectType;
use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
#[sea_orm(table_name = "interaction")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub interaction_id: i64,
    pub interaction_type: String,
    pub dest_type: InteractionObjectType,
    pub dest_id: i64,
    pub from_type: InteractionObjectType,
    pub from_id: i64,
    pub metadata: Json,
    pub created_by: i64,
    pub created_at: TimeDateTimeWithTimeZone,
    pub deleted_by: Option<i64>,
    pub deleted_at: Option<TimeDateTimeWithTimeZone>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::user::Entity",
        from = "Column::CreatedBy",
        to = "super::user::Column::UserId",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    User,
}

impl Related<super::user::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::User.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
