//! SeaORM Entity. Generated by sea-orm-codegen 0.4.1

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "category")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub category_id: i64,
    pub site_id: Option<i32>,
    pub name: Option<String>,
    pub theme_default: bool,
    pub theme_id: Option<i32>,
    pub permissions_default: bool,
    pub permissions: Option<String>,
    pub nav_default: bool,
    pub top_bar_page_name: Option<String>,
    pub side_bar_page_name: Option<String>,
    pub template_id: Option<i32>,
    pub per_page_discussion: Option<bool>,
    pub per_page_discussion_default: bool,
    pub rating: Option<String>,
    pub category_template_id: Option<i32>,
    pub theme_external_url: Option<String>,
    pub autonumerate: bool,
    pub page_title_template: Option<String>,
    pub license_id: String,
    pub license_inherits: bool,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::site::Entity",
        from = "Column::SiteId",
        to = "super::site::Column::SiteId",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    Site,
}

impl Related<super::site::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Site.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
