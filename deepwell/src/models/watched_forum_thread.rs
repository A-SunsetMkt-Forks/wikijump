//! SeaORM Entity. Generated by sea-orm-codegen 0.4.1

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "watched_forum_thread")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub watched_id: i64,
    pub user_id: Option<i32>,
    pub thread_id: Option<i32>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::forum_thread::Entity",
        from = "Column::ThreadId",
        to = "super::forum_thread::Column::ThreadId",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    ForumThread,
}

impl Related<super::forum_thread::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ForumThread.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
