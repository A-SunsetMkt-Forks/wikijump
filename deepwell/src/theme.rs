//! SeaORM Entity. Generated by sea-orm-codegen 0.4.1

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "theme")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub theme_id: i64,
    pub name: Option<String>,
    pub unix_name: Option<String>,
    pub r#abstract: bool,
    pub extends_theme_id: Option<i32>,
    pub variant_of_theme_id: Option<i32>,
    pub custom: bool,
    pub site_id: Option<i32>,
    pub use_side_bar: bool,
    pub use_top_bar: bool,
    pub sort_index: i32,
    pub sync_page_name: Option<String>,
    pub revision_number: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::site::Entity",
        from = "Column::SiteId",
        to = "super::site::Column::SiteId",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    Site,
}

impl Related<super::site::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Site.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
