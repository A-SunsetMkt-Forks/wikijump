# This is the schema-defining document.
# All other localization files must have the same keys,
# or the build will fail.

# -- NOTE --
#
# All documentation comments must be *after* the line they're annotating.
# Comments on the same line also work.
#
# Otherwise they will not be associated to the right item.
#
# CORRECT:
#
#   apple: My other string
#   ## Comment!
#
#   banana:
#     My other string
#     ## Comment!
#
#   cherry: My string ## Comment!
#
# INCORRECT:
#
#    ## Comment!
#    durian: This comment won't be picked up properly!
#
# See https://stackoverflow.com/a/53858927 for more information.
#
# This processor will ignore any comments that don't start with '##'
# to avoid accidental misordering of comments not considered documentation.
#

# Generic UI components
components:
  spinny:
    label:
      ACTIVE: Active loading indicator
      ERROR: Error indicator
      SUCCESS: Success indicator
      WARNING: Warning indicator

  wikitext:
    RENDERING_INDICATOR: Rendering...
    perf:
      TITLE: Performance
      RENDER: "RENDER:"

  # unimplemented
  theme_picker:
    TOOLTIP: Set Color Scheme

# Sheaf editor
sheaf:
  TITLE: SHEAF
  VERSION: Alpha

  tooltips:
    CLOSE_PREVIEW: Close Preview
    OPEN_PREVIEW: Open Preview

  stats:
    CHARS: CHARS
    BYTES: BYTES
    WORDS: WORDS
    LINES: LINES

  preview_tabs:
    RESULT: Result
    HTML: HTML Output
    CSS: CSS Output
    AST: AST
    TOKENS: Tokens
    EDITOR_AST: Editor AST

# CodeMirror FTML language extension
cmftml:
  lint:
    WARNING_SOURCE: >
      ftml({rule}: {kind} at {token}) [{from, number, :: ,_}, {to, number, :: ,_}]
      ## Warning emit description

    # Warnings (documentation copied from FTML)

    RECURSION_DEPTH_EXCEEDED: Too much recursion in markup.
    ## RecursionDepthExceeded
    ## The self-enforced recursion limit has been passed, giving up.

    END_OF_INPUT: Rule of type ''{rule}'' couldn't be processed before the end of the document was reached.
    ## EndOfInput
    ## Attempting to process this rule failed because the end of input was reached.

    NOT_IMPLEMENTED: The syntax ''{slice}'' hasn't been implemented in FTML yet.
    ## NotImplemented
    ## Temporary rule denoting that this syntactical construction isn't implemented yet.

    NO_RULES_MATCH: The string ''{slice}'' doesn't match anything and will be rendered as plain text.
    ## NoRulesMatch
    ## No rules match for these tokens, returning as plain text.

    RULE_FAILED: The rule ''{rule}'' failed to match here, and had to fallback another rule.
    ## RuleFailed
    ## Attempting to match this rule failed, falling back to try an alternate.

    INVALID_INCLUDE: This include is invalid and won't be rendered.
    ## InvalidInclude
    ## This include block was malformed, and thus not substituted.

    LIST_DEPTH_EXCEEDED: This list is nested too deeply, and can't be rendered.
    ## ListDepthExceeded
    ## This list tries to nest too deeply.

    BLOCKQUOTE_DEPTH_EXCEEDED: This blockquote is nested too deeply, and can't be rendered.
    ## BlockquoteDepthExceeded
    ## This native blockquote tries to nest too deeply.

    NO_SUCH_BLOCK: Unknown block ''{slice}''.
    ## NoSuchBlock
    ## There is no rule for the block name specified.

    BLOCK_DISALLOWS_STAR: Block ''{slice}'' doesn't support a star invocation. (starting '*' character)
    ## BlockDisallowsStar
    ## This block does not allow star (`*`) invocation.

    BLOCK_DISALLOWS_SCORE: Block ''{slice}'' doesn't support a score invocation. (starting '_' character)
    ## BlockDisallowsScore
    ## This block does not allow score (`_`) invocation.

    BLOCK_MISSING_NAME: Block ''{slice}'' requires a name/value, but none is specified.
    ## BlockMissingName
    ## This block does not specify a name.

    BLOCK_MISSING_CLOSE_BRACKETS: This block is missing closing ']]' brackets.
    ## BlockMissingCloseBrackets
    ## This block does not have close brackets when required.

    BLOCK_MALFORMED_ARGUMENTS: Block ''{slice}'' has malformed arguments.
    ## BlockMalformedArguments
    ## Encountered malformed arguments when parsing the block.

    BLOCK_MISSING_ARGUMENTS: Block ''{slice}'' is missing one or more required arguments.
    ## BlockMissingArguments
    ## Some required arguments where missing when parsing the block.

    BLOCK_EXPECTED_END: The block of type ''{rule}'' was expected to end by at least this point.
    ## BlockExpectedEnd
    ## This block expected to end its body here.

    BLOCK_END_MISMATCH: The block of type ''{rule}'' was expected to end here, not ''{slice}''.
    ## BlockEndMismatch
    ## An end block was found, but of the incorrect type.

    NO_SUCH_MODULE: Unknown module ''{slice}''.
    ## NoSuchModule
    ## There is no rule for the module name specified.

    MODULE_MISSING_NAME: A module name was expected to be provided.
    ## ModuleMissingName
    ## This module does not specify a name.

    INVALID_URL: The URL ''{slice}'' is invalid.
    ## InvalidUrl
    ## The URL passed here was invalid.
